// import getPreprocessorTypeByAttribute from '../../utils/get-preprocessor-type-by-attribute'
import mergeOutputChunks from '../../utils/merge-output-chunks'
// import preprocess from '../../utils/preprocess-node'
import recast from 'recast'

const JS_EXPORT = `export default (function tag() {

})();`


/**
 * Generate the component javascript logic
 * @param   { Object } sourceNode - node generated by the riot compiler
 * @param   { string } source - original component source code
 * @param   { Object } options - user options
 * @param   { Output } output - current compiler output
 * @returns { Promise<Output> } - enhanced output with the result of the current generator
 */
export default async function javascript(sourceNode, source, options, { code, map }) {
  // const preprocessorName = getPreprocessorTypeByAttribute(sourceNode)
  // const javascriptNode = sourceNode.text
  // const preprocessorOutput = await preprocess('js', preprocessorName, options, source, javascriptNode)
  const outputAST = recast.parse(JS_EXPORT)

  return mergeOutputChunks(recast.prettyPrint(outputAST), { code, map })
}